c
Reservation.total_price(@total_nights, @reservation.listing.price_per_night)
@result
@result.success?
n
c
params[:payment_method_nonce]
params
c
@result
n
@result
c
              payment_method_nonce: params[:payment_method_nonce])
              amount: Reservation.total_price(@total_nights, @reservation.listing.price_per_night),
Braintree::Transaction.sale(
Reservation.total_price(@total_nights, @reservation.listing.price_per_night)
params[:payment_method_nonce]
params
@reservation
gon.client_token
c
gon.client_token
c
gon.client_token
gon.client_token = generate_client_token
generate_client_token
Braintree::ClientToken.generate
gon.client_token
params
@result
c
params
payment_method_nonce: params[:payment_method_nonce]
@result
c
current_user.reservations.last
current_user.Reservation.last
Reservation.last
Reservation.las
Reservation.total_price
@total_price
current_user.reservations.last.total_price
current_user.reservations.last
current_user.reservation.last
@reservation
@listing
c
current_user
@reservation
params
@result
c
@total_night.class
@total_night = @reservation.total_nights(@reservation.check_in, @reservation.check_out)
@total_night
c
@reservation.total_price(@total_nights, @reservation.listing.price_per_night)
@reservation.total_nights(@reservation.check_in, @reservation.check_out)
c
(@reservation.check_out - @reservation.check_in).to_i
(@reservation.check_in - @reservation.check_out).to_i
@reservation.check_in
@reservation
c
@total_nights =Reservation.total_nights(@reservation.check_in, @reservation.check_out)
@total_nights = @reservation.total_nights(@reservation.check_in, @reservation.check_out)
@total_nights = total_nights(@reservation.check_in, @reservation.check_out)
@reservation.check_in
check_in
@reservation
exit
@reservation
@reservation.user
exit
ReservationMailer.booking_email(@reservation.user, @reservation.listing.user, @reservation.id).deliver_later
@reservation.listing.user
@reservation.user
@reservation
exit
customer
host
reservation_id
@customer
@host
c
params["daterange"]
reservation_params
params
c
require 'date'
params["daterange"].split[-1]
params["daterange"].split[0]
params["daterange"].class
params["daterange"].count
params["daterange"]
params
c
params
reservation_params
exit
params
c
current_user.reservations.build
current_user.reservations.build()
current_user.reservations.new
current_user.reservations
current_user.listings
current_user.listing
current_user
exit
current_user
exit
current_user
exit
current_user
exit
@user
current_user
exit
auth_hash.info
auth_hash.name
auth_hash.publicprofile
auth_hash.profile
auth_hash.info
 first_name = auth_hash["publicprofile"]
 first_name = auth_hash["publicprofile"]["name"]
 first_name = auth_hash["info"]["name"]
 u.first_name = auth_hash["info"]["name"]
exit
